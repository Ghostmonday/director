#!/bin/bash

# Create Module PR Script with Fallback System
# Automates the process of creating a pull request for a new module

set -euo pipefail

# Configuration
LOG_FILE="automation/logs/daemon.log"
PR_TRACKER="automation/logs/pr-tracker.md"
MONITOR_SCRIPT="automation/scripts/monitor-pr-status.sh"
BUGBOT_SCRIPT="automation/scripts/bugbot-integration.sh"

# Check if module name is provided
if [ $# -eq 0 ]; then
    echo "Usage: $0 <module_name>"
    exit 1
fi

MODULE_NAME=$1
TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
BRANCH_NAME="feature/module-${MODULE_NAME}-${TIMESTAMP}"

echo "üöÄ Creating PR for module: ${MODULE_NAME}" | tee -a "$LOG_FILE"
echo "  Branch: ${BRANCH_NAME}" | tee -a "$LOG_FILE"

# Create and checkout new branch
git checkout -b ${BRANCH_NAME}

# Add module files (handle different file locations)
if [[ -f "${MODULE_NAME}.swift" ]]; then
    git add "${MODULE_NAME}.swift"
elif [[ -d "Modules/${MODULE_NAME}" ]]; then
    git add Modules/${MODULE_NAME}/*.swift
else
    # Add all Swift files in current directory
    git add *.swift
fi

# Add any new files created
git add .

# Commit changes
git commit -m "Add new module: ${MODULE_NAME}

- Implements ${MODULE_NAME} for DirectorStudio pipeline
- Follows established module patterns
- Includes validation and testing
- Ready for BugBot review

Closes: #${MODULE_NAME}"

# Push branch to remote
git push -u origin ${BRANCH_NAME}

# Create pull request (using GitHub CLI)
PR_NUMBER=$(gh pr create \
    --title "Add Module: ${MODULE_NAME}" \
    --body "## üöÄ New Module: ${MODULE_NAME}

This PR implements the ${MODULE_NAME} module for the DirectorStudio pipeline.

### üìã Implementation Details
- **Module Type:** ${MODULE_NAME}
- **Stage:** As defined in execution roadmap
- **Dependencies:** All required dependencies included
- **Validation:** Module validation implemented

### üß™ Testing
- [ ] Module compiles without errors
- [ ] Module instantiates correctly
- [ ] Module validation passes
- [ ] Integration tests pass

### üìö Documentation
- [ ] Module documentation complete
- [ ] API documentation updated
- [ ] Usage examples provided

### üîç Review Checklist
- [ ] Code follows DirectorStudio patterns
- [ ] Error handling implemented
- [ ] Performance considerations addressed
- [ ] Security best practices followed

### ü§ñ BugBot Integration
This PR will be automatically reviewed by BugBot for:
- ‚úÖ Build validation
- ‚úÖ Lint checks
- ‚úÖ Security scanning
- ‚úÖ Test execution

**Auto-merge:** Enabled if all checks pass
**Fallback:** Patch branch will be created if fixes needed

---
*Generated by DirectorStudio PR Automation*" \
    --base main \
    --head ${BRANCH_NAME} \
    --json number -q .number)

echo "‚úÖ Pull request created: #${PR_NUMBER}" | tee -a "$LOG_FILE"

# Update PR tracker
update_pr_tracker "${MODULE_NAME}" "${PR_NUMBER}" "${BRANCH_NAME}"

# Trigger BugBot review
echo "ü§ñ Triggering BugBot review for PR #${PR_NUMBER}" | tee -a "$LOG_FILE"
if [[ -f "$BUGBOT_SCRIPT" ]]; then
    "$BUGBOT_SCRIPT" --review "${PR_NUMBER}" "${MODULE_NAME}" || {
        echo "‚ö†Ô∏è  BugBot review failed - manual review may be needed" | tee -a "$LOG_FILE"
    }
else
    echo "‚ö†Ô∏è  BugBot script not found - skipping automated review" | tee -a "$LOG_FILE"
fi

# Start PR monitoring
echo "üîç Starting PR monitoring for #${PR_NUMBER}" | tee -a "$LOG_FILE"
if [[ -f "$MONITOR_SCRIPT" ]]; then
    "$MONITOR_SCRIPT" --monitor-pr "${MODULE_NAME}" "${PR_NUMBER}" &
    echo "‚úÖ PR monitoring started in background" | tee -a "$LOG_FILE"
else
    echo "‚ö†Ô∏è  PR monitoring script not found" | tee -a "$LOG_FILE"
fi

echo "üéâ PR creation complete for module: ${MODULE_NAME}"
echo "  PR Number: #${PR_NUMBER}"
echo "  Branch: ${BRANCH_NAME}"
echo "  Status: Pending BugBot review"

# Function to update PR tracker
update_pr_tracker() {
    local module_name="$1"
    local pr_number="$2"
    local branch_name="$3"
    local timestamp=$(date +"%Y-%m-%d %H:%M:%S")
    
    # Find the module in the tracker and update it
    if grep -q "| $module_name |" "$PR_TRACKER"; then
        # Update existing entry
        sed -i '' "s/| $module_name | - | - | ‚è≥ | - | - | Not started |/| $module_name | $pr_number | $branch_name | üîÑ PENDING | $timestamp | - | BugBot reviewing |/" "$PR_TRACKER"
    else
        echo "‚ö†Ô∏è  Module $module_name not found in PR tracker" | tee -a "$LOG_FILE"
    fi
    
    echo "üìù Updated PR tracker for $module_name" | tee -a "$LOG_FILE"
}
